trigger: none

variables:
  - name: ADO_USER
    value: ADO

pr:
  branches:
    include:
      - "main"

pool:
  vmImage: ubuntu-latest

stages:
  - stage: CI
    jobs:
      - script: |
          git config --global url."https://$SYSTEM_ACCESSTOKEN@dev.azure.com".insteadOf "https://arcbs@dev.azure.com"
        displayName: "Set system access for module"
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)

      - job: lintFormat
        displayName: Lint, Format
        steps:
          - checkout: self
            persistCredentials: "true"
            fetchDepth: "0"
            displayName: Checkout

          - script: |
              BRANCH_REF=$(System.PullRequest.SourceBranch)
              BRANCH_NAME=${BRANCH_REF#refs/heads/}
              git checkout --track origin/${BRANCH_NAME}
              git config user.name "$(ADO_USER)"
              git config user.email "$(ADO_USER)"
            displayName: Configure Git

          - script: |
              make format
            displayName: Format

          - script: |
              make lint
            displayName: Lint

          - script: |
              PREVIOUS_COMMITTER=$(git log -1 --pretty=format:'%an')

              [[ ${PREVIOUS_COMMITTER} == $(ADO_USER) ]] \
                && echo "Initiated by automation, exiting" \
                && exit 0

              git add .
              git commit -m 'Automated Commit'
              git push
            displayName: Push Changes to Branch

      - job: plan
        displayName: Plan
        variables:
          TF_STATE_BUCKET: "phoodie"
          TF_STATE_KEY: "TerraformStateFiles/ssh-key-rotation"
        steps:
          - checkout: self
            displayName: Checkout

          - task: AWSShellScript@1
            displayName: Set Credentials
            inputs:
              regionName: "ap-southeast-2"
              awsCredentials: "phoodie_sandbox"
              scriptType: "inline"
              inlineScript: |
                echo "##vso[task.setvariable variable=AWS_SECRET_ACCESS_KEY;]$AWS_SECRET_ACCESS_KEY"
                echo "##vso[task.setvariable variable=AWS_ACCESS_KEY_ID;]$AWS_ACCESS_KEY_ID"

          - displayName: Terraform Plan
            script: |
              make init 
              make init plan
